# ==============================================================================
# SYSTEM Configuration
# Defines general system properties.
# ==============================================================================
[host]
  system = "kvm"              # Required Options: "auto", "baremetal, oracle", "vmware", "kvm"
  cpu = "intel"               # Required Options: "auto", "intel", "amd", "none"
  gpu = "auto"                # Required Options: "auto", "nvidia", "amd", "intel"
  opensource = true           # Required Options: true / false

# ==============================================================================
# DISK Configuration
# Defines the disk(s) to be prepared and partitioned.
# Multiple [[disk]] sections can be defined for multiple disks.
# ==============================================================================
[[disk]]
  path = "/dev/sdb"           # Required: Disk path (e.g., "/dev/sda" or "/dev/nvme0n1").
  wipe = true                 # Required: If true, the disk's partition table will be wiped.
  type = "GPT"                # Required: Partition table type. Options: ["GPT", "MBR"].

  # Partition configuration for the current disk.
  # Multiple [[disk.partition]] sections can be defined for multiple partitions on this disk.
  [[disk.partition]]
    number = 1                # Required: Partition number on the disk (e.g., 1, 2, 3...).
    label = "EFI"             # Required: Partition label (e.g., "EFI", "Root", "Home").
    type = "EF00"             # Required: Partition type code (e.g., "EF00" for EFI, "8300" for Linux filesystem).
    size = "4G"               # Required: Partition size (e.g., "512M", "20G").
    start = "0"               # Optional: Start of the partition (e.g., "1M"). If "0", it will be automatically calculated.
    path = "/efi"             # Optional: Mount path for the partition (e.g., "/mnt/boot").
    guid = ""                 # Optional: GUID for the partition. Primarily used for specific boot scenarios or identification.
    filesystem = "vfat"       # Required: Filesystem type. Selections from ["fat32", "vfat", "ext4", "btrfs", "xfs", "f2fs"].
    crypt = false             # Required: Set to true for encrypted partitions (e.g., root/home).

  [[disk.partition]]
    number = 2
    label = "ROOT"
    type = "8304"             # Linux x86-64 root (/)
    size = "10G"
    start = "0"
    path = "/"
    guid = ""
    filesystem = "btrfs"      # Required: Selections from ["fat32", "vfat", "ext4", "btrfs", "xfs", "f2fs"].
    crypt = true              # Required: Set to true for encrypted partitions.
    crypttype = "luks2"       # Optional: Selections from ['luks1', 'luks2']. Defaults to 'luks2'.
    cryptname = "cryptroot"   # Optional: When omitted, compiled as 'crypt' + 'partition.label' (e.g., 'cryptRoot').
    cryptlabel = "vault"      # Optional: For type="luks2", used for crypttab entries.
    btrfsoptions = "defaults,noatime,nodiratime,compress=zstd,space_cache=v2" # Optional: For filesystem="btrfs" - subvolume mount options.
    btrfssubvolumes = [       # Optional: For filesystem="btrfs" - list of subvolumes to create.
      "/",                    # Creates a subvolume @, mounted to /
      "/var",
      "/var/cache/pacman/pkg",
      "/var/log",
      "/var/lib/libvirt",
      "/var/lib/docker",
      "/var/tmp",
      "/.swap",
      "/.snapshots"
    ]

# ==============================================================================
# LINUX Configuration
# A general section providing 'keys' for system-wide settings.
# This section does not correspond to a specific installable object but
# rather to collections of settings like packages or services.
# ==============================================================================
[linux]
packages = [
  # Core system packages
  "base",              # Essential tools and utilities to make a minimal Arch Linux system bootable.
  "base-devel",        # Group of packages essential for building software from source (e.g., make, gcc, pkg-config).
  "linux",             # The Arch Linux kernel and its modules. This is the core of the operating system.
  "linux-firmware",    # Collection of firmware files required for various hardware components (e.g., Wi-Fi, graphics).

  # Essential utilities and filesystem tools
  "util-linux",        # Collection of miscellaneous Linux utilities (e.g., fdisk, mount, dmesg).
  "cryptsetup",        # Tools for setting up and managing encrypted disk volumes (e.g., LUKS).
  "btrfs-progs",       # Utilities for managing Btrfs filesystems (e.g., creating, checking, resizing).
  "dosfstools",        # Utilities for creating, checking, and repairing FAT filesystems (e.g., for EFI system partitions).
  "sbctl",             # Tool for managing Secure Boot keys and signing bootloaders/kernels.

  # System administration and networking
  "sudo",              # Allows a permitted user to execute a command as the superuser or another user.
  "iwd",               # Netlink-based wireless daemon for Linux, a modern alternative to wpa_supplicant.
  "git",               # Distributed version control system. Essential for cloning repositories.
  "openssh",           # Secure Shell (SSH) client and server for remote access and secure file transfer.

  # Text editors
  "vim",               # Highly configurable text editor, a powerful tool for system configuration.
  "mg",                # A small, Emacs-like text editor. (MiniGnu)
  "nano",              # A simple, user-friendly command-line text editor, often preferred by beginners.

  # Archive utility
  "unzip"              # Utility to extract files from .zip archives.
]

services = [           # Optional: List of systemd services to enable.
  ["enable", "sshd"]
]

groups = [             # Optional: List of system groups to ensure exist or manage.
  "internet",
  "libvirt"            # Example of adding a group
]

# ==============================================================================
# FIRSTBOOT Configuration
# Defines parameters for initial system setup after installation.
# ==============================================================================
[firstboot]
systemd = false            # Required: Use systemd-firstboot or standard commands for initial setup.
locale = "en_AU.UTF-8"     # Required: System locale (e.g., "en_AU.UTF-8").
timezone = "Australia/Melbourne"# Required: System timezone (e.g., "Australia/Melbourne").
hostname = "archlinux"     # Required: System hostname.
keyboard = "us"            # Required: Keyboard layout.
packages = ['openssh']     # Optional: Packages specific to firstboot setup.

# ==============================================================================
# USER Configuration
# Defines user accounts to be created.
# Multiple [[user]] sections can be defined for multiple users.
# ==============================================================================
[[user]]
  name = "echjansen"             # Required: Username for the new user.
  homed = true                   # Required: Use systemd-homed for home directory management or standard '/home'.
  password = "password123"       # Required: User password
  groups = ['wheel', 'audio', 'video'] # Optional: List of groups the user should belong to.
  services = [                   # Optional: Services specific to this user (less common, usually handled globally).
    ["enable", "iwd"]
  ]
  files = [
    ["uncomment-line", "%wheel ALL=", "/etc/sudoers"]
  ]
  packages = [
    "emacs"
  ]

# ==============================================================================
# APPLICATION Configuration
# Defines any shell commands to be executed on the target system.
# Multiple [[application]] sections can be defined for multiple applications.
# ==============================================================================
[[application]]
  name = "mkinitcpio"
  # Command execution
  commands = [
    ["mkdir", "-p", "/mnt/efi/EFI/Linux"],
    ["mkinitcpio", "-P"],
  ]
  # File operations
  files = [
    # Configure etc/mkinitcpio.conf
    ["replace-line", "MODULES=", "MODULES=()", "/etc/mkinitcpio.conf"],
    ["replace-line", "BINARIES=", "BINARIES=()", "/etc/mkinitcpio.conf"],
    ["replace-line", "FILES=", "FILES=()", "/etc/mkinitcpio.conf"],
    ["replace-line", "HOOKS=", [
      "HOOKS=(",               # Start of the HOOKS array definition
      "base",                  # Essential utilities for early boot
      "systemd",               # Systemd-related utilities
      "autodetect",            # Automatically detects necessary modules
      "modconf",               # Configures kernel modules
      "kms",                   # Kernel Mode Setting for graphics
      "keyboard",              # Keyboard input support
      "sd-vconsole",           # Systemd virtual console support
      "sd-encrypt",            # Systemd-based disk encryption support
      "block",                 # Block device support
      "filesystems",           # Filesystem mounting support
      "fsck",                  # Filesystem check utilities
      ")"                      # End of the HOOKS array definition
      ],
      "/etc/mkinitcpio.conf"],
    # Configure /etc/mkinitcpio.d/linux.preset
    ["uncomment-line", "ALL_config", "/etc/mkinitcpio.d/linux.preset"],
    ["comment-line", "default_image", "/etc/mkinitcpio.d/linux.preset"],
    ["uncomment-line", "default_uki", "/etc/mkinitcpio.d/linux.preset"],
    ["comment-line", "default_options", "/etc/mkinitcpio.d/linux.preset"], # TODO: Should be uncommented to show the splash-screen
    ["comment-line", "fallback_image", "/etc/mkinitcpio.d/linux.preset"],
    ["uncomment-line", "fallback_uki", "/etc/mkinitcpio.d/linux.preset"],
    # Configure /etc/kernel/cmdline
    ["append-line", [
      "cryptdevice=/dev/sdb2:cryptroot", # Specifies the encrypted device and its mapped name
      "root=/dev/mapper/cryptroot",      # Sets the root filesystem to the decrypted volume
      "rootflags=subvol=@",              # Specifies a Btrfs subvolume as the root
      "mem_sleep_default=deep",          # Sets the default suspend-to-RAM state to deep sleep
      "quiet",                           # Suppresses most kernel boot messages for a cleaner boot
      "rw",                              # Mounts the root filesystem as read-write
    ],
      "/etc/kernel/cmdline"],
  ]

[[application]]
  name = "fstab"
  commands = [["fstab", "-U", "/mnt", ">>/mnt/etc/fstab"]]

# ==============================================================================
# BOOTLOADER Configuration
# Defines the bootloader setup.
# ==============================================================================
[bootloader]
type = "systemd-boot"         # Required: Bootloader type. Options: ["grub", "systemd-boot"].
efi_partition = "/efi"        # Required: If type is "grub" or "systemd-boot" on an EFI system, path to EFI partition mount.
root_partition = "/dev/sdb2"  # Required: Path to the root partition (e.g., "/dev/sdb2").
grub_partition = ""           # Optional: For GRUB, the partition where GRUB should be installed (e.g., /dev/sda). Required for BIOS systems or if not using EFI for GRUB.
packages = [                  # Optional: Packages required for the bootloader.
  "os-prober",
  "efibootmgr"
]
